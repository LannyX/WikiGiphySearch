{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/giphy.service.ts","webpack:///./src/app/history.service.ts","webpack:///./src/app/history/history.component.css","webpack:///./src/app/history/history.component.html","webpack:///./src/app/history/history.component.ts","webpack:///./src/app/wiki.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"h1 {\\n  color: blue\\n}\"","module.exports = \"<div>\\n  <h1>\\n    Search information from Wikipedia and Giphy\\n  </h1>\\n</div>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'WikiGiphySearch';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { HistoryComponent } from './history/history.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { WikiService } from './wiki.service';\nimport { HistoryService } from './history.service';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'history', component: HistoryComponent }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HistoryComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes)\n  ],\n  providers: [WikiService, HistoryService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div>\\n  <a routerLink=\\\"/history\\\">History</a>\\n\\n  <p>\\n    Please input search text, and then click the search button\\n  </p>\\n\\n  <div>\\n    <input [(ngModel)]=\\\"searchText\\\" />\\n    <button (click)=\\\"search()\\\">Search</button>\\n  </div>\\n\\n  <div *ngIf=\\\"wikiSearchResults\\\">\\n    <h3>\\n      Result from Wikipedia: {{ wikiSearchResults.length }} results\\n    </h3>\\n    <div *ngFor=\\\"let wikiSearchResult of wikiSearchResults\\\">\\n      {{ wikiSearchResult }}\\n    </div>\\n  </div>\\n\\n  <div *ngIf=\\\"giphySearchResults\\\">\\n    <h3>\\n      Result from Giphy: {{ giphySearchResults.length }} results\\n    </h3>\\n    \\n    <div *ngFor=\\\"let imageUrl of giphySearchResults\\\">\\n      <img  src=\\\"{{ imageUrl }}\\\">\\n      <br>{{ imageUrl }}\\n    </div>\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { WikiService } from '../wiki.service';\nimport { HistoryService } from '../history.service';\nimport { GiphyService } from '../giphy.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  // search text\n  searchText: string = '';\n\n  // the number of search results from Wikipedia\n  wikiResultNum = 20;\n  // search results from Wikipedia\n  wikiSearchResults: string[];\n\n  // the number of search results from Giphy\n  giphyResultNum = 5;\n  // search results from Giphy\n  giphySearchResults: string[];\n  \n\n  constructor(private wikiService: WikiService, private giphyService: GiphyService, private historyService: HistoryService) {\n  }\n\n  ngOnInit() {\n  }\n\n  search() {\n    if (this.searchText === '') {\n      return;\n    }\n    \n    // search from Wikipedia\n    this.wikiService.searchWikipedia(this.searchText, this.wikiResultNum).subscribe(\n      (response) => {\n        console.log('Got search results from Wikipedia successfully!');\n        console.log(response);\n\n        this.wikiSearchResults = response;\n      },\n      (error) => {\n        console.log(`Failed to search '${this.searchText}' on Wikipedia!`);\n        console.log(error);\n      }\n    );\n\n    // search from Giphy\n    this.giphyService.searchGiphy(this.searchText, this.giphyResultNum).subscribe(\n      (response) => {\n        console.log('Got search results from Giphy successfully!');\n        console.log(response);\n\n        this.giphySearchResults = response;\n      },\n      (error) => {\n        console.log(`Failed to search '${this.searchText}' on Giphy!`);\n        console.log(error);\n      }\n    );\n\n\n    // save the current search into history\n    this.historyService.saveCurrentSearchContent(this.searchText);\n        \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GiphyService {\n\n  giphyKey = 'ZD1QXywzsuiQJWFtHQ2ZGHjhc33QljzY';\n\n  /* 'https://api.giphy.com/v1/gifs/search?api_key=ZD1QXywzsuiQJWFtHQ2ZGHjhc33QljzY&q=&limit=5&offset=0&rating=G&lang=en' */\n  // base url for Giphy API\n  giphyBaseUrl = 'https://api.giphy.com/v1/gifs/search?';\n  // API key\n  giphyApiKeyParam = `api_key=${this.giphyKey}`;\n  // url param for search text\n  searchTextParam = '&q=';\n  // url param for the number of search results\n  resultNumParam = '&limit=';\n  // constant url params\n  constantUrlParams = '&offset=0&rating=G&lang=en';\n\n  \n  constructor(private http: HttpClient) { }\n\n  searchGiphy(searchText: string, giphyResultNum: number): Observable<any> {\n    let queryUrl = `${this.giphyBaseUrl}${this.giphyApiKeyParam}${this.searchTextParam}${searchText}${this.resultNumParam}${giphyResultNum}${this.constantUrlParams}`;\n    \n    return this.http.get(queryUrl).pipe(\n      map(response => response['data'].map(res => res['images']['original']['url']))\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HistoryService {\n\n  // user search history\n  searchHistory: any[] = [];\n\n  constructor() { }\n\n  saveCurrentSearchContent(searchText: string) {\n    let searchItem = {\n      searchText: searchText,\n      timestamp: new Date()\n    };\n    this.searchHistory.push(searchItem);\n  }\n\n  getSearchHistory(): any[] {\n    return this.searchHistory;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  <a routerLink=\\\"/dashboard\\\">Back</a>\\n\\n  <div *ngIf=\\\"searchHistory && searchHistory.length>0; then showHistory; else noHistory\\\">\\n  </div>\\n  \\n  <ng-template #showHistory>\\n    <h3>\\n      User search history:\\n    </h3>\\n            \\n    <div *ngFor=\\\"let searchItem of searchHistory\\\">\\n      <span>\\n        Search Text: {{ searchItem.searchText }}, \\n      </span>\\n      <span>\\n        Search Timestamp: {{ searchItem.timestamp }}\\n      </span>\\n    </div>\\n  </ng-template>\\n    \\n  <ng-template #noHistory>\\n    <h3>\\n      No user search history\\n    </h3>\\n  </ng-template>\\n  \\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { HistoryService } from '../history.service';\n\n@Component({\n  selector: 'app-history',\n  templateUrl: './history.component.html',\n  styleUrls: ['./history.component.css']\n})\nexport class HistoryComponent implements OnInit {\n\n  // user search history\n  searchHistory: any[];\n\n  constructor(private historyService: HistoryService) {\n  }\n\n  ngOnInit() {\n    this.searchHistory = this.historyService.getSearchHistory();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WikiService {\n  \n  /* 'https://en.wikipedia.org/w/api.php?action=query&list=search&prop=info&inprop=url&utf8=&format=json&origin=*&srlimit=20&srsearch=' */\n  // base url for Wikipedia API\n  wikiBaseUrl: string = 'https://en.wikipedia.org/w/api.php?';\n  // constant url params\n  constantUrlParams = 'action=query&list=search&prop=info&inprop=url&utf8=&format=json&origin=*';\n  // url param for the number of search results\n  resultNumParam = '&srlimit=';\n  // url param for search text\n  searchTextParam = '&srsearch=';\n  \n\n  constructor(private http: HttpClient) {\n\n  }\n\n  searchWikipedia(searchText: string, wikiResultNum: number): Observable<any> {\n    let queryUrl = `${this.wikiBaseUrl}${this.constantUrlParams}${this.resultNumParam}${wikiResultNum}${this.searchTextParam}${searchText}`;\n    \n    return this.http.get(queryUrl).pipe(\n      map(response => response['query'].search.map(res => res['title'])\n      )\n    );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}